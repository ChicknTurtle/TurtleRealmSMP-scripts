
# Facing of location
# Get the cardinal direction of a location
expression:
    patterns:
        [the] facing of [loc[ation]] %location%
        [loc[ation]] %location%'[s] facing
    get:
        return (facing of vector (vector from expr-1 to (location 1 block in front of expr-1)))

# Facing of vector
# Get the cardinal direction of a vector
# TODO: support up/down, specify with 'horizontal' in pattern
expression:
    patterns:
        [the] facing of [vector] %vector%
        [vector] %vector%'[s] facing
    get:
        set {_x} to x of expr-1
        set {_z} to z of expr-1
        
        # determine the dominant axis
        if abs({_x}) >= abs({_z}):
            if {_x} > 0:
                return east
            else:
                return west
        else:
            if {_z} > 0:
                return south
            else:
                return north

# Vector of direction
# Get a vector from a cardinal direction
expression:
    patterns:
        [the] vector (of|from) dir[ection] %direction%
    get:
        return expr-1.getDirection()
