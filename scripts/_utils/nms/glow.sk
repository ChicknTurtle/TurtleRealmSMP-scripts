
import:
    java.util.Arrays
    org.bukkit.Bukkit

    net.minecraft.network.protocol.game.ClientboundSetEntityDataPacket
    net.minecraft.network.syncher.SynchedEntityData
    net.minecraft.network.syncher.EntityDataAccessor
    net.minecraft.network.syncher.EntityDataSerializers

    net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket

# Clientside glow
effect:
    patterns:
        make %entities% [client[side]] glow (for|to) %players%
        [client[side]] glow %entities% (for|to) %players%
        make %entities% stop [client[side]] glowing (for|to) %players%
    trigger:
        set {_players::*} to expr-2
        loop indexes of {_players::*}:
            set {_players::%loop-value%} to {_players::%loop-value%}.getHandle()
        set {_entities::*} to expr-1
        loop indexes of {_entities::*}:
            set {_entities::%loop-value%} to {_entities::%loop-value%}.getHandle()

        loop {_entities::*}:
            set {_entity} to loop-value
            set {_entityData} to {_entity}.getEntityData()
            if matched pattern is 3:
                # stop glow
                set {_dataList} to Arrays.asList(new SynchedEntityData.DataValue(0, EntityDataSerializers.BYTE, 0.byteValue()))
            else:
                # set glow
                set {_dataList} to Arrays.asList(new SynchedEntityData.DataValue(0, EntityDataSerializers.BYTE, 64.byteValue()))
            # send packet
            set {_packet} to new ClientboundSetEntityDataPacket({_entity}.getId(), {_dataList})
            loop {_players::*}:
                loop-value-2.connection.sendPacket({_packet})

# Clientside teams
###
effect:
    patterns:
        set [client[side]] team[s] of %players% to %team% (for|to) %players%
    trigger:
        set {_players::*} to expr-3
        loop indexes of {_players::*}:
            set {_players::%loop-value%} to {_players::%loop-value%}.getHandle()
        set {_targets::*} to expr-1
        set {_targets} to [name of {_targets::*}]
        set {_team} to expr-2

        # send packet
        broadcast({_team}, "team")
        broadcast({_targets}, "targets")
        set {_packetType} to ClientboundSetPlayerTeamPacket.METHOD_ADD
        set {_packet} to new ClientboundSetPlayerTeamPacket(team name of {_team}, {_packetType}, {_team}, {_targets})
        loop {_players::*}:
            loop-value.connection.sendPacket({_packet})
        
        set {_scoreboard} to Bukkit.getServer().getScoreboardManager().mainScoreboard.getHandle()
        
        # !send Bukkit.getServer().getScoreboardManager().mainScoreboard.getHandle().getPlayerTeam("test-team")
        var scoreboardTeam: PlayerTeam? = scoreboard.getPlayerTeam(entityName)
        if (scoreboardTeam == null) {scoreboardTeam = PlayerTeam(scoreboard, entityName)}
        
        sendPacket(ClientboundSetPlayerTeamPacket.createAddOrModifyPacket(scoreboardTeam, true), player)
        sendPacket(ClientboundSetPlayerTeamPacket.createPlayerPacket(scoreboardTeam, entityName, ClientboundSetPlayerTeamPacket.Action.ADD), player)
###
