
import:
    org.bukkit.Registry

on load:
    set {-allDataComponents::*} to ...Registry.DATA_COMPONENT_TYPE.keyStream().toArray()

brig command /turtle:nbt:
    permission: op
    arguments:
        register optional literal arg "mode" using ("components", "vanilla", "full", "custom")
        register optional greedystring arg "path" using {-allDataComponents::*}
    trigger:
        set {_item} to (player's tool)
        if {_item} is air:
            send "§cFound no elements" to player
            exit trigger
        set {_itemname} to (effective item name of {_item})
        set {_mode} to "components" if {_mode} isn't set
        if {_mode} is "components":
            set {_nbt} to (nbt of {_item})
        else if {_mode} is "vanilla":
            set {_nbt} to (vanilla nbt of {_item})
        else if {_mode} is "full":
            set {_nbt} to (full nbt of {_item})
        else if {_mode} is "custom":
            set {_nbt} to (custom nbt of {_item})
        if {_path} isn't set:
            send "NBT of %{_itemname}%: %(pretty nbt of {_nbt})%"
        else:
            set {_tagtype} to (tag type of tag {_path} of {_nbt})
            if {_tagtype} is set:
                set {_tag} to ({_tagtype} {_path} of {_nbt})
            if {_tag} isn't set:
                set {_tagtype} to (tag type of tag {_path} of {_nbt})
                {_tagtype} is set
                set {_tag} to ({_tagtype} {_path} of {_nbt})
            if {_tag} is set:
                if {_tag} is an nbt compound:
                    send "NBT of %{_itemname}%: %(pretty nbt of {_tag})%"
                else:
                    send "NBT of %{_itemname}%: %{_tag}%"
            else:
                send "§c%proper case {_mode}% nbt of %{_itemname}% has no elements matching %{_path}%" to player

# reload last script
on command:
    set {_args::*} to full command split at " "
    # check if ran /sk reload
    {_args::1} is "skript:skript", "skript", "skript:sk", or "sk"
    {_args::2} is "reload"
    # get reloaded script (if any)
    set {_script} to (join (elements from 3 to max(3, size of {_args::*}) of {_args::*}) with " ")
    if {_script} is set:
        # save reloaded script
        if event-commandsender is console:
            set {-lastReloadedScript::console} to {_script}
        else:
            set {-lastReloadedScript::%player%} to {_script}
    else:
        # reload last saved script (if set)
        set {_script} to {-lastReloadedScript::console} if (event-commandsender is console) else {-lastReloadedScript::%player%}
        {_script} is set
        cancel event
        set {_command} to "/sk reload %{_script}%"
        if event-commandsender is console:
            execute console command {_command}
        else:
            make player say {_command}
