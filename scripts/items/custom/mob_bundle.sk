
options:
    # Mobs that can be picked up by mob bundle
    AllowedMobs: allay, armadillo, bat, bee, blaze, bogged, breeze, cat (entity type), cave spider, chicken (entity type), cod (entity type), cow, creeper, dolphin, drowned, endermite, evoker, fox, frog, glow squid, goat, guardian, husk, magma cube, mooshroom, ocelot, parrot, phantom, pig, piglin, piglin brute, pillager, polar bear, pufferfish (entity type), rabbit (entity type), salmon (entity type), sheep, silverfish, skeleton, slime, snow golem, spider, squid, stray, strider, tadpole, tropical fish (entity type), vex, villager, vindicator, witch, wither skeleton, wolf, zombie, zombie villager, zombified piglin

    # Baby mobs that can be picked up by mob bundle
    AllowedBabyMobs: camel, donkey, happy ghast, hoglin, horse, llama, mule, panda, sniffer, trader llama, turtle, zoglin

    # All entities can be picked up while in creative

when ready to register custom items:
    set (custom item "turtle:mob_bundle") to (black bundle with nbt from "{""minecraft:item_model"":""turtle:mob_bundle"",""minecraft:item_name"":""Mob Bundle"",""minecraft:rarity"":""uncommon""}")
    make (custom item "turtle:mob_bundle") fire resistant

when ready to load recipes:
    register shaped recipe:
        id: "turtle:mob_bundle"
        result: custom item "turtle:mob_bundle"
        shape: "shs","h h","hhh"
        category: "equipment"
        ingredients:
            set ingredient of "s" to string
            set ingredient of "h" to (custom item "turtle:ravager_hide")

# pickup mob
on player interact on entity:
    (item id of (player's tool)) is "turtle:mob_bundle"
    # checks
    size of bundle contents of (player's tool) is 0
    event-entity is set
    event-entity is alive
    event-entity isn't a player
    if player's gamemode isn't creative:
        if any:
            target of event-entity is set
            ({@AllowedMobs}, {@AllowedBabyMobs}) doesn't contain event-entity
        then:
            exit trigger
        if age of event-entity >= 0:
            ({@AllowedMobs}) doesn't contain event-entity
            exit trigger
        if entity size of event-entity > 2:
            exit trigger
    # pickup mob
    cancel event
    wait 2 ticks
    (item id of (player's tool)) is "turtle:mob_bundle"
    set {_fill} to (((spawn item of event-entity) ? barrier) with nbt from "{components:{max_stack_size:1,custom_data:{from_mob_bundle:1b}}}")
    set (name of {_fill}) to "Â§r%effective entity name of event-entity%"
    set {_nbt} to nbt of event-entity
    set compound tag "entityData" of custom nbt of {_fill} to {_nbt}
    set string tag "entityType" of custom nbt of {_fill} to str(event-entity.getType().getKey())
    # fix villager bed
    if int tag "SleepingX" of (full nbt of event-entity) is set:
        set {_x} to int tag "SleepingX" of (full nbt of event-entity)
        set {_y} to int tag "SleepingY" of (full nbt of event-entity)
        set {_z} to int tag "SleepingZ" of (full nbt of event-entity)
        set {_bedLoc} to location({_x},{_y},{_z})
        set blockdata tag "occupied" of block at {_bedLoc} to false
    delete event-entity
    set bundle contents of (player's tool) to {_fill}
    # play sound
    play sound "minecraft:item.bundle.insert" at player
    # grant advancement
    if all:
        event-entity is a villager
        age of event-entity < 0
    then:
        grantAdvancement("turtle:adventure/kidnapping", player)
    if event-equipmentslot is off hand slot:
        set player's offhand tool to (player's offhand tool)
    else:
        set player's tool to (player's tool)

# throw mob
on item spawn:
    # event-entity = dropped item entity
    # event-item = spawn egg item
    # {_p} = thrower player
    # {_bundle} = mob bundle item
    (boolean tag "from_mob_bundle" of (custom nbt of event-item)) is true
    set {_p} to (uuid tag "Thrower" of nbt of event-entity) parsed as entity
    if all:
        (item id of ({_p}'s tool)) isn't "turtle:mob_bundle"
        (item id of ({_p}'s offhand tool)) isn't "turtle:mob_bundle"
    then:
        exit trigger
    # get nbt and spawn mob
    set {_nbt} to compound tag "entityData" of custom nbt of event-item
    loop ("Pos","Rotation","Motion","FallDistance","UUID","SleepingX","SleepingY","SleepingZ","TileX","TileY","TileZ"):
        delete tag loop-value of {_nbt}
    set {_spawntype} to (minecraft entity type from key (string tag "entityType" of custom nbt of event-item))
    mc spawn {_spawntype} at {_p}:
        clear (armor of event-entity)
        clear (tool of event-entity)
        clear (offhand tool of event-entity)
        add {_nbt} to full nbt of event-entity
        set {_size} to event-entity.getBoundingBox().getVolume()
        set {_force} to max(0.75,1.5-{_size})
        push event-entity forward with force {_force}
        add {_p}'s velocity to event-entity's velocity
    # delete spawn egg item
    delete event-entity
    # play sound
    play sound "minecraft:item.bundle.drop_contents" at {_p}

# cancel bundle in inventory
on inventory click:
    click type is right mouse button
    if (item id of event-item) is "turtle:mob_bundle":
        player's cursor slot is air
        boolean tag "from_mob_bundle" of (custom nbt of (first element of (bundle contents of event-item))) is true
        cancel event
    if (item id of player's cursor slot) is "turtle:mob_bundle":
        event-item is air
        boolean tag "from_mob_bundle" of (custom nbt of (first element of (bundle contents of (player's cursor slot)))) is true
        cancel event
